"""Exposes a URL that specifies the behavior of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behavior of this scalar."""
  url: String!
) on SCALAR

"""category """
type Category {
  id: ID!
  name: String!
  image: String!
  creationAt: DateTime!
  updatedAt: DateTime!
  products: [Product!]!
}

input CreateCategoryDto {
  name: String!
  image: String!
}

input CreateProductDto {
  title: String!
  price: Float!
  description: String!
  categoryId: Float!
  images: [String!]!
}

input CreateUserDto {
  email: String!
  name: String!
  password: String!
  role: Role
  avatar: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Login """
type Login {
  access_token: String!
  refresh_token: String!
}

type Mutation {
  addProduct(data: CreateProductDto!): Product!
  updateProduct(id: ID!, changes: UpdateProductDto!): Product!
  deleteProduct(id: ID!): Boolean!
  addUser(data: CreateUserDto!): User!
  updateUser(id: ID!, changes: UpdateUserDto!): User!
  deleteUser(id: ID!): Boolean!
  addCategory(data: CreateCategoryDto!): Category!
  updateCategory(id: ID!, changes: UpdateCategoryDto!): Category!
  deleteCategory(id: ID!): Boolean!
  login(email: String!, password: String!): Login!
  refreshToken(refreshToken: String!): Login!
}

"""product """
type Product {
  id: ID!
  title: String!
  price: Float!
  description: String!
  category: Category!
  images: [String!]!
  creationAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  products(limit: Int, offset: Int, price: Int, price_min: Int, price_max: Int, title: String, categoryId: Float): [Product!]!
  product(id: ID!): Product!
  users(limit: Float): [User!]!
  user(id: ID!): User!
  isAvailable(email: String!): Boolean!
  categories: [Category!]!
  category(id: ID!): Category!
  myProfile: User!
}

enum Role {
  admin
  customer
}

input UpdateCategoryDto {
  name: String
  image: String
}

input UpdateProductDto {
  title: String
  price: Float
  description: String
  categoryId: Float
  images: [String!]
}

input UpdateUserDto {
  email: String
  name: String
  password: String
  role: Role
  avatar: String
}

"""product """
type User {
  id: ID!
  email: String!
  password: String!
  name: String!
  role: String!
  avatar: String!
  creationAt: DateTime!
  updatedAt: DateTime!
}

